-- App.js ----

Now we must add the following "state" value to our App component:
o searchString / setSearchString – default value: ""
• Before we are done, we must add the following "handleSubmit(e)" function to the App component according
the following specification:
o Prevents the default action for the event (parameter e)
o Navigates to the route: /restaurants?borough=searchString where searchString is the value in the state
(above) – HINT: You can use the "useHistory" hook – see: "'Redirecting' to a Route"
https://web422.ca/notes/react-routing
o Resets the value of searchString to ""
This will enable us to filter our restaurants by a user-entered "borough" value

--   ABOUT.js ---
Place information that you wish to share about interesting projects you have completed / working on, your
academic career, development interests, etc.


--   Restaurants component ---
FIX: When the component is first mounted, props.query is changed, or the page "state" value is changed....

(solution: make an if borough is a param, then use api call for with borough)
Borough – the value of borough in the query property from props (props.query). This can be
obtained by "parsing" the value of props.query. HINT: You can use the "query-string" module – see:
"Adding Query Parameters to our Routes" https://web422.ca/notes/react-routing
• NOTE: If the value of "borough" is undefined, in the query string, then do not include it in
the fetch request as a parameter